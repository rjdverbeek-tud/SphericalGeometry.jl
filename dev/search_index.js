var documenterSearchIndex = {"docs":
[{"location":"#SphericalGeometry.jl","page":"Home","title":"SphericalGeometry.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SphericalGeometry]\nOrder = [:module]\nPrivate = false","category":"page"},{"location":"#SphericalGeometry.SphericalGeometry","page":"Home","title":"SphericalGeometry.SphericalGeometry","text":"A Julia Package for handling Spherical Geometry. Spherical geometry is the  geometry of the two-dimensional surface of a sphere. This package only handles geometries generated using great circle sections (arcs).\n\nAngles are specified in [deg].\n\nTypes:\n\nPoint: specified by latitude ϕ [deg] and longitude λ [deg]\nArc: specified as the shortest great circle between two points.\nLine: is a great circle line specified by a point and azimuth [deg]\nArcs: is a string of continuous line sections defined by a set of points.\nPolygon: is a spherical polygon defined by a set of points.\n\nIt includes the calculation of:\n\nThe angular distance to a point, line, arc, multi-arc, or polygon border\nThe along line angular distance between a point and a line.\nThe intersection points between lines, arcs, multi-arcs, and polygon borders.\nThe self intersection points of multi-arcs and polygon borders\nThe bounding box of a given polygon or set of arcs.\nThe convexhull of a given polygon.\nThe normalized point\nThe (final) azimuth [deg] between two points\nThe spherical angle [deg] and spherical excess [deg] between three points\nThe midpoint between two points, of an arc, of an arcs\nThe intermediate point at a given fraction between two points, of an arc, of an arcs\nThe destination point given a start point, a direction and distance.\nThe intersection points of arcs, and polygons\nThe self intersection points of arcs or a polygon\nThe highest/lowest latitude (point) of a great circle\nThe area of a polygon/spherical triangle given a radius\n\nAnd testing if:\n\na point, arc, arcs or polygon is inside a polygon\na point is on a line, arc, arcs or polygon border (within tolerance)\na polygon/arcs is self-isselfintersecting\na polygon is simple, complex, convex or concave\n\n\n\n\n\n","category":"module"},{"location":"#Types","page":"Home","title":"Types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Point\nArc\nLine\nArcs\nPolygon","category":"page"},{"location":"#SphericalGeometry.Point","page":"Home","title":"SphericalGeometry.Point","text":"Point(ϕ::Float64, λ::Float64)\n\nPoint type with latitude ϕ [deg] and longitude λ [deg]\n\n\n\n\n\n","category":"type"},{"location":"#SphericalGeometry.Arc","page":"Home","title":"SphericalGeometry.Arc","text":"Arc(point₁::Point, point₂::Point)\n\nArc type with start position point₁ [deg] and end position point₂ [deg]. The Arc is defined along the shortest great circle distance between the two points.\n\n\n\n\n\n","category":"type"},{"location":"#SphericalGeometry.Line","page":"Home","title":"SphericalGeometry.Line","text":"Line(point::Point, azimuth::Float64)\n\nLine type with point [deg] and azimuth [deg]. The line type of a great circle line that completely circles the sphere.\n\n\n\n\n\n","category":"type"},{"location":"#SphericalGeometry.Arcs","page":"Home","title":"SphericalGeometry.Arcs","text":"Arcs(points::Vector{Point})\n\nArcs type with a Vector of points [deg]. A minimum of two points are necessary for the continuous string of line sections.\n\n\n\n\n\n","category":"type"},{"location":"#SphericalGeometry.Polygon","page":"Home","title":"SphericalGeometry.Polygon","text":"Polygon(inside_point::Point, points::Vector{Point})\n\nPolygon type with points [deg]. A minimum of three different points are necessary for a polygon. Also an inside point must be given.\n\n\n\n\n\n","category":"type"},{"location":"#Functions","page":"Home","title":"Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SphericalGeometry]\nOrder = [:function]\nPrivate = false","category":"page"},{"location":"#SphericalGeometry.along_line_angular_distance-Tuple{Float64, Float64}","page":"Home","title":"SphericalGeometry.along_line_angular_distance","text":"along_line_angular_distance(angular_distance₁₃::Float64,\nangular_distance_line3::Float64)\n\nThe along_line_angular_distance from the start point₁ [deg] to the closest point on the great circle line to point₃. As input we need the angular_distance₁₃ [deg] between point₁ and point₃ [deg] and the closest distance angular_distance_line3 [deg] between the great circle line and point3 [deg]. The distance is non-directional.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.along_line_angular_distance-Tuple{Point, Line}","page":"Home","title":"SphericalGeometry.along_line_angular_distance","text":"along_line_angular_distance(point₃::Point, line₁::Line)\n\nThe along_line_angular_distance from the start point₁ [deg] to the closest point on the great circle line line₁ to point₃. The distance is non-directional.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, point₁::Point, point₂::Point)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a great circle line section starting in point₁ [deg] and ending in point₂ [deg]. The great circle line section does not continue around the unit sphere.\n\nThe angular_distance does not change sign when being left or right of the arc.\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.angular_distance-Tuple{Float64, Float64, Float64}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(angular_distance₁₃::Float64, azimuth₁₃::Float64,\nazimuth₁₂::Float64)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a great circle line starting in point₁ [deg] with azimuth₁₂ [deg]. For the calculation we need the angular_distance₁₃ and azimuth₁₃ between point₁ and point₃ [deg], and the azimuth₁₂ from point₁ to point₂ along the great circle line. It is assumed that the great circle line does not stop in point₂, but continuous around the unit sphere.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Tuple{Point, Arcs}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, arcs::Arcs)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a an arcs.\n\nThe angular_distance does not change sign when being left or right of the arc.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Tuple{Point, Arc}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, arc₁₂::Arc)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a great circle line section starting in point₁ [deg] and ending in point₂ [deg]. The great circle line section does not continue around the unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Tuple{Point, Line}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, line₁::Line)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a great circle line starting in point₁ [deg] with azimuth₁₂ [deg]. A positive value indicates being right of the line, and negative being left of the line.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Tuple{Point, Point, Float64}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, point₁::Point, azimuth₁₂::Float64)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a great circle line starting in point₁ [deg] with azimuth₁₂ [deg] from point₁ to point₂. It is assumed that the great circle line does not stop in point₂, but continuous around the unit sphere. A positive value indicates being right of the line, and negative being left of the line.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Tuple{Point, Point}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₁::Point, point₂::Point)\n\nReturn the angular_distance [deg] of the great circle line between the positions point₁ [deg] and point₂ [deg] on a unit sphere.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Tuple{Point, Polygon}","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, polygon::Polygon)\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on the border of a polygon.\n\nThe angular_distance does not change sign when being left or right of the arc.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_distance-Union{Tuple{T}, Tuple{Point, Array{Point{T}, 1}}} where T<:Float64","page":"Home","title":"SphericalGeometry.angular_distance","text":"angular_distance(point₃::Point, points::Vector{Points{T}}) where T<:Float64\n\nReturn the angular_distance [deg] from point₃ [deg] to the closest point on a an set of points representing an set of arcs.\n\nThe angular_distance does not change sign when being left or right of the arc.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_length-Tuple{Arcs}","page":"Home","title":"SphericalGeometry.angular_length","text":"angular_length(arcs::Arcs)\n\nReturn the angular_length [deg] along the arcs on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_length-Tuple{Arc}","page":"Home","title":"SphericalGeometry.angular_length","text":"angular_length(arc::Arc)\n\nReturn the angular_length [deg] of the great circle line section on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_length-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.angular_length","text":"angular_length(polygon::Polygon)\n\nReturn the angular_length deg along the polygon on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.angular_length-Tuple{Vector{Point{Float64}}}","page":"Home","title":"SphericalGeometry.angular_length","text":"angular_length(points::Vector{Points{Float64}})\n\nReturn the angular_length [deg] along the subsequent points on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.area","page":"Home","title":"SphericalGeometry.area","text":"area(point₁::Point, point₂::Point, point₃::Point, radius::Float64=1.0)\n\nReturn the area of the spherical triangle 123 based on the points point₁ - point₂ - point₃. Without given radius a unit sphere is assumed.\n\nSource: mathworld.wolfram.com/SphericalTriangle.html\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.area-2","page":"Home","title":"SphericalGeometry.area","text":"area(angular_distance₁₂::Float64, angular_distance₂₃::Float64, angular_distance₁₃::Float64,\nradius::Float64=1.0)\n\nReturn the area of the spherical triangle 123 based on the angular distances [deg] 12-23-13. Without given radius a unit sphere is assumed.\n\nSource: mathworld.wolfram.com/SphericalTriangle.html\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.area-3","page":"Home","title":"SphericalGeometry.area","text":"area(polygon::Polygon, radius::Float64=1.0)\n\nReturn the area of the spherical polygon. Without given radius a unit sphere is assumed.\n\nSource: en.wikipedia.org/wiki/Spherical_trigonometry # Area and spherical excess\n\nThe method has been altered to allow for the usage of an internal point given with the Polygon. This method only works with polygons that fit within half a sphere as it uses great circle distances between subsequent points.\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.azimuth-Tuple{Arc}","page":"Home","title":"SphericalGeometry.azimuth","text":"azimuth(line::Line)\n\noutput: angle [deg]\n\nReturn the initial azimuth [deg], measured clockwise from the north direction, of the line on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.azimuth-Tuple{Point, Point}","page":"Home","title":"SphericalGeometry.azimuth","text":"azimuth(point₁::Point, point₂::Point)\n\noutput: angle [deg]\n\nReturn the initial azimuth [deg], measured clockwise from the north direction, of the great circle line between the positions point₁ and point₂ [deg] on a unit sphere.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.boundingbox-Tuple{Arcs}","page":"Home","title":"SphericalGeometry.boundingbox","text":"boundingbox(arcs::Arcs)\n\nOutput: [[ϕ_south,ϕ_north],[λ_west,λ_east]]\n\nGenerate bounding box values from the given arcs. All arcs stay within the lat/lon-limits of the bounding box.\n\nSource: Chamberlain & Duquette - Some Algorithms for Polygons on a Sphere\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.boundingbox-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.boundingbox","text":"boundingbox(polygon::Polygon)\n\nOutput: [[ϕ_south,ϕ_north],[λ_west,λ_east]]\n\nGenerate bounding box values from the given polygon. This bounding box can be  used for quick point-in-polygon tests. Any arc of the polygon stays within  the lat/lon-limits of the bounding box.\n\nSource: Chamberlain & Duquette - Some Algorithms for Polygons on a Sphere\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.convexhull-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.convexhull","text":"convexhull(polygon::Polygon)\n\noutput: Polygon\n\nGenerate a convex hull for the polygon.\n\nSource: stackoverflow.com/questions/9678624/convex-hull-of-longitude-latitude-points-on-the-surface-of-a-sphere\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.destination_point-Tuple{Line, Float64}","page":"Home","title":"SphericalGeometry.destination_point","text":"destination_point(line::Line, angular_distance::Float64)\n\noutput: point::Point\n\nGiven a line with a startpoint and azimuth, calculate the `destina­tionpoint[deg] at theangular_distance`.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.destination_point-Tuple{Point, Float64, Float64}","page":"Home","title":"SphericalGeometry.destination_point","text":"destination_point(start_point::Point, angular_distance::Float64,\nazimuth::Float64)\n\noutput: point::Point\n\nGiven a start_point [deg], initial azimuth (clockwise from North) [deg], angular_distance [deg] calculate the position of the destina­tion_point [deg] traversing along a great circle line.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.final_azimuth-Tuple{Arc}","page":"Home","title":"SphericalGeometry.final_azimuth","text":"final_azimuth(line::Line)\n\noutput: angle [deg]\n\nReturn the final_azimuth [deg] of the line on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.final_azimuth-Tuple{Point, Point}","page":"Home","title":"SphericalGeometry.final_azimuth","text":"final_azimuth(point₁::Point, point₂::Point)\n\noutput: angle [deg]\n\nReturn the final azimuth [deg], measured clockwise from the north direction, of the great circle line between the positions point₁ and point₂ [deg] on a unit sphere.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.highest_latitude-Tuple{Point, Float64}","page":"Home","title":"SphericalGeometry.highest_latitude","text":"highest_latitude(point::Point, azimuth::Float64)\n\noutput: latitude [deg]\n\nThe highest latitude a great circle reaches when starting in a point along the given azimuth [deg].\n\nSource: https://www.edwilliams.org/avform147.htm#Clairaut\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.highest_latitude_point-Tuple{Point, Float64}","page":"Home","title":"SphericalGeometry.highest_latitude_point","text":"highest_latitude_point(point::Point, azimuth::Float64)\n\noutput: point::Point\n\nThe highest latitude point a great circle reaches when starting in point along the given azimuth [deg].\n\nSource: https://www.edwilliams.org/avform147.htm#XTE\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.highest_latitude_point-Tuple{Point, Point}","page":"Home","title":"SphericalGeometry.highest_latitude_point","text":"highest_latitude_point(point₁::Point, point₂::Point)\n\noutput: point::Point\n\nThe highest latitude point a great circle reaches when starting in point₁  towards point₂. The point must be between point₁ and point₂.\n\nSource: https://www.edwilliams.org/avform147.htm#XTE\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intermediate_point-Tuple{Arc, Float64}","page":"Home","title":"SphericalGeometry.intermediate_point","text":"intermediate_point(arc::Arc, fraction::Float64)\n\noutput: point::Point\n\nReturn the intermediate_point [deg] at any fraction along the great circle arc [deg]. The fraction along the great circle arc is such that fraction = 0.0 is at the start of the arc and fraction 1.0 is at the end of the arc.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intermediate_point-Tuple{Arcs, Float64}","page":"Home","title":"SphericalGeometry.intermediate_point","text":"intermediate_point(arcs::Arcs, fraction::Float64)\n\noutput: point::Point\n\nReturn the intermediate_point [deg] at any fraction along the great circle arcs [deg]. The fraction along the great circle arcs is such that fraction = 0.0 is at the start of the arcs and fraction 1.0 is at the end of the arcs.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intermediate_point-Tuple{Point, Point, Float64}","page":"Home","title":"SphericalGeometry.intermediate_point","text":"intermediate_point(point₁::Point, point₂::Point, fraction::Float64)\n\noutput: point::Point\n\nReturn the intermediate_point [deg] at any fraction along the great circle line section between the two points point₁ and point₂ [deg]. The fraction along the great circle line section is such that fraction = 0.0 is at point₁ [deg] and fraction 1.0 is at point₂ [deg].\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_point-NTuple{4, Point}","page":"Home","title":"SphericalGeometry.intersection_point","text":"intersection_point(point₁::Point, point₂::Point, point₃::Point, point₄::Point)\n\noutput: point::Point\n\nReturn the intersection point [deg] of two great circle line section given by two sets of two points: point₁ and point₂ [deg] and point₃ and point₄ [deg].\n\nUnder certain circumstances the results can be an ∞ or ambiguous solution. https://blog.mbedded.ninja/mathematics/geometry/spherical-geometry/finding-the-intersection-of-two-arcs-that-lie-on-a-sphere/\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_point-Tuple{Arc, Arc}","page":"Home","title":"SphericalGeometry.intersection_point","text":"intersection_point(arc₁::Arc, arc₂::Arc)\n\noutput: point::Point\n\nReturn the intersection point [deg] of two great circle line sections.\n\nUnder certain circumstances the results can be an ∞ or ambiguous solution.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_point-Tuple{Line, Line}","page":"Home","title":"SphericalGeometry.intersection_point","text":"intersection_point(line₁::Line, line₂::Line)\n\noutput: point::Point\n\nReturn the intersection point point₃ [deg] of two great circle lines 'line₁' and line₂.\n\nUnder certain circumstances the results can be an ∞ or ambiguous solution.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_point-Tuple{Point, Point, Float64, Float64}","page":"Home","title":"SphericalGeometry.intersection_point","text":"intersection_point(point₁::Point, point₂::Point, azimuth₁₃::Float64,\nazimuth₂₃::Float64)\n\noutput: point::Point\n\nReturn the intersection point point₃ [deg] of two great circle lines given by two start points [deg] point₁ and point₂ [deg] and two azimuths [deg] from point₁ to point₃ [deg], and from point₂ to point₃ [deg].\n\nUnder certain circumstances the results can be an ∞ or ambiguous solution.\n\nSource: edwilliams.org/avform.htm\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_points-Tuple{Arcs, Arcs}","page":"Home","title":"SphericalGeometry.intersection_points","text":"intersection_points(arcs₁::Arcs, arcs₂::Arcs)\n\noutput: points::Vector of Point\n\nReturn the intersection points [deg] of two line sections.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_points-Tuple{Arcs, Polygon}","page":"Home","title":"SphericalGeometry.intersection_points","text":"intersection_points(arcs::Arcs, polygon::Polygon)\n\noutput: points::Vector of Point\n\nReturn the intersection points [deg] of a arcs with a polygon.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.intersection_points-Tuple{Polygon, Polygon}","page":"Home","title":"SphericalGeometry.intersection_points","text":"intersection_points(polygon₁::Polygon, polygon₂::Polygon)\n\noutput: points::Vector of Point\n\nReturn the intersection points [deg] of two polygons.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.iscomplex-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.iscomplex","text":"iscomplex(polygon::Polygon)\n\nTrue if the polygon is 'complex' meaning that it self-intersects.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isconcave-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.isconcave","text":"isconcave(polygon::Polygon)\n\nTests if a polygon is concave.\n\nThis is true when the polygon is simple and not convex.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isconvex-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.isconvex","text":"isconvex(polygon::Polygon)\n\nTests if a polygon is convex.\n\nThe test is setup by checking exhaustively all possible arcs between all points of the polygon to intersect with the polygon. If false the polygon is convex.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isinside-Tuple{Arc, Polygon}","page":"Home","title":"SphericalGeometry.isinside","text":"isinside(arc::Arc, polygon::Polygon)\n\nDetermine if the arc is fully inside the polygon. The border is outside the polygon.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isinside-Tuple{Arcs, Polygon}","page":"Home","title":"SphericalGeometry.isinside","text":"isinside(arcs::Arcs, polygon::Polygon)\n\nDetermine if the arcs is fully inside the polygon. The border is outside the polygon.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isinside-Tuple{Point, Polygon}","page":"Home","title":"SphericalGeometry.isinside","text":"isinside(point::Point, polygon::Polygon)\n\nDetermine if the point is inside the polygon. The border is outside the polygon.\n\nSource: M. Bevis and J.L. Chatelain, \"Locating a point on a spherical surface relative to a spherical polygon\" 1989\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isinside-Tuple{Polygon, Polygon}","page":"Home","title":"SphericalGeometry.isinside","text":"isinside(polygon₁::Polygon, polygon₂::Polygon)\n\nDetermine if the polygon₁ is fully inside the polygon₂. The border is outside the polygon₁.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.ison","page":"Home","title":"SphericalGeometry.ison","text":"ison(point::Point, arc::Arcs [,tolerance::Float64=tolerance_deg])\n\nDetermine if the point is on the arcs.\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.ison-2","page":"Home","title":"SphericalGeometry.ison","text":"ison(point::Point, arc::Arc [,tolerance::Float64=tolerance_deg])\n\nDetermine if the point is on the arc.\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.ison-3","page":"Home","title":"SphericalGeometry.ison","text":"ison(point::Point, line::Line [,tolerance::Float64=tolerance_deg])\n\nDetermine if the point is on the line.\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.ison-4","page":"Home","title":"SphericalGeometry.ison","text":"ison(point::Point, polygon::Polygon [,tolerance::Float64=tolerance_deg])\n\nDetermine if the point is on the border of the polygon.\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.isselfintersecting-Tuple{Arcs}","page":"Home","title":"SphericalGeometry.isselfintersecting","text":"isselfintersecting(arcs::Arcs)\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isselfintersecting-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.isselfintersecting","text":"isselfintersecting(polygon::Polygon)\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.isselfintersecting-Tuple{Vector{Point{Float64}}}","page":"Home","title":"SphericalGeometry.isselfintersecting","text":"isselfintersecting(points::Vector{Point{Float64}})\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.issimple-Tuple{Polygon}","page":"Home","title":"SphericalGeometry.issimple","text":"issimple(polygon::Polygon)\n\nTrue if the polygon is 'simple' meaning that it does not self-intersect.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.lowest_latitude-Tuple{Point, Float64}","page":"Home","title":"SphericalGeometry.lowest_latitude","text":"lowest_latitude(point::Point, azimuth::Float64)\n\noutput: latitude [deg]\n\nThe lowest latitude a great circle reaches when starting in a point along the given azimuth [deg].\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.lowest_latitude_point-Tuple{Point, Float64}","page":"Home","title":"SphericalGeometry.lowest_latitude_point","text":"lowest_latitude_point(point::Point, azimuth::Float64)\n\noutput: point::Point\n\nThe lowest latitude point a great circle reaches when starting in point along the given azimuth [deg].\n\nSource: https://www.edwilliams.org/avform147.htm#XTE\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.lowest_latitude_point-Tuple{Point, Point}","page":"Home","title":"SphericalGeometry.lowest_latitude_point","text":"lowest_latitude_point(point₁::Point, point₂::Point)\n\noutput: point::Point\n\nThe lowest latitude point a great circle reaches when starting in point₁  towards point₂. The point must be between point₁ and point₂.\n\nSource: https://www.edwilliams.org/avform147.htm#XTE\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.midpoint-Tuple{Arcs}","page":"Home","title":"SphericalGeometry.midpoint","text":"midpoint(arcs::Arcs)\n\noutput: point::Point\n\nReturn the half-way point midpoint [deg] on the great circle arcs [deg] on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.midpoint-Tuple{Arc}","page":"Home","title":"SphericalGeometry.midpoint","text":"midpoint(arc::Arc)\n\noutput: point::Point\n\nReturn the half-way point midpoint [deg] on the great circle arc [deg] on a unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.midpoint-Tuple{Point, Point}","page":"Home","title":"SphericalGeometry.midpoint","text":"midpoint(point₁::Point, point₂::Point)\n\noutput: point::Point\n\nReturn the half-way point midpoint [deg] on the great circle line between the positions point₁ and point₂ [deg] on a unit sphere.\n\nSource: www.movable-type.co.uk/scripts/latlong.html\n\n\n\n\n\n","category":"method"},{"location":"#SphericalGeometry.spherical_angle","page":"Home","title":"SphericalGeometry.spherical_angle","text":"spherical_angle(point₁::Point, point₂::Point, point₃::Point)\n\noutput: angle [deg]\n\nReturn the 'spherical_angle' [deg] of angle₁₂₃ given the triangle point₁ - point₂ - point₃\n\nSource: en.wikipedia.org/wiki/Spherical_trigonometry\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.spherical_angle-2","page":"Home","title":"SphericalGeometry.spherical_angle","text":"spherical_angle(angular_distance₁₂::Float64, angular_distance₂₃::Float64, angular_distance₁₃::Float64)\n\noutput: angle [deg]\n\nReturn the 'spherical_angle' [deg] of angle₁₂₃ given the angular distances [deg] between point₁ and point₂, point₂ and point₃, and point₁ and point₃.\n\nSource: en.wikipedia.org/wiki/Spherical_trigonometry\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.spherical_excess","page":"Home","title":"SphericalGeometry.spherical_excess","text":"spherical_excess(angular_distance₁₂::Float64, angular_distance₂₃::Float64, angular_distance₁₃::Float64)\n\noutput: angle [deg]\n\nReturn the 'spherical_excess' [deg] of the spherical triangle 123 given the angular distances between the points point₁, point₂, and point₃\n\nSource: mathworld.wolfram.com/SphericalExcess.html\n\n\n\n\n\n","category":"function"},{"location":"#SphericalGeometry.spherical_excess-Tuple{Point, Point, Point}","page":"Home","title":"SphericalGeometry.spherical_excess","text":"spherical_excess(point₁::Point, point₂::Point, point₃::Point)\n\noutput: angle [deg]\n\nReturn the 'spherical_excess' [deg] of the spherical triangle 123 given the points point₁ - point₂ - point₃\n\nSource: mathworld.wolfram.com/SphericalExcess.html\n\n\n\n\n\n","category":"method"}]
}
